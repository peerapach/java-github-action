name: docker-build-push

on:
#   push:
#     branches:
#       - 'main'
  workflow_dispatch: 

env:
    # Use docker.io for Docker Hub if empty
    REGISTRY: ghcr.io
    # github.repository as <account>/<repo>
    IMAGE_NAME: ${{ github.repository }}

jobs:
  build-docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }}
        
      - name: validate Dockerfile
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: type=sha,prefix=,format=long
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: false
          context: .
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # - name: Analyze for critical and high CVEs
      #   id: docker-scout-cves
      #   if: ${{ github.event_name != 'pull_request_target' }}
      #   uses: docker/scout-action@v1
      #   with:
      #     command: cves,recommendations,compare
      #     image: ${{ steps.meta.outputs.tags }}
      #     sarif-file: sarif.output.json
      #     summary: true
      
      # - name: Upload SARIF result
      #   id: upload-sarif
      #   if: ${{ github.event_name != 'pull_request_target' }}
      #   uses: github/codeql-action/upload-sarif@v2
      #   with:
      #     sarif_file: sarif.output.json
